1046 Shortest Distance （20 分）
The task is really simple: given N exits on a highway which forms a simple cycle, you are supposed to tell the shortest distance between any pair of exits.

Input Specification:
Each input file contains one test case. For each case, the first line contains an integer N (in [3,10^5 ]), followed by N integer distances D1  D2  ...DN , 
where Di is the distance between the i-th and the (i+1)-st exits, and D​N  is between the N-th and the 1st exits. All the numbers in a line are separated by a space. 
The second line gives a positive integer M (≤10^4 ), with M lines follow, each contains a pair of exit numbers, provided that the exits are numbered from 1 to N. 
It is guaranteed that the total round trip distance is no more than 10^7​​ .

Output Specification:
For each test case, print your results in M lines, each contains the shortest distance between the corresponding given pair of exits.

Sample Input:
5 1 2 4 14 9
3
1 3
2 5
4 1
Sample Output:
3
10
7

注意： 好难。。。
#include<iostream>
#include<algorithm>
using namespace std;
int main()
{
	int N,M;
	scanf("%d",&N);
	int a[N+1]={};
	a[0] = 0;
	for(int i=1;i<=N;i++) 
	{
		scanf("%d",&a[i]);
		if(i) a[i]+=a[i-1];
	}
	scanf("%d",&M);
	for(int i=0;i<M;i++)
	{
		int l,r;
		scanf("%d %d",&l,&r);
		if(l>r) swap(l,r);
		if(l==r) printf("0\n");
		else
		{
			int dis0 = a[r-1]-a[l-1];
			int dis1 = a[N] - dis0;
			printf("%d\n",min(dis0,dis1));
		}
		
	}
} 